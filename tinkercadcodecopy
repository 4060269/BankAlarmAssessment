int alarmPin = 2; // outputpin for led
int pushbuttonPin = 4; // inputpin for pushbutton
int pirPin = 5; // inputpin for pir sensor
int ultratrigPin = 3; // inputpin for ultrasonic trigger pin
int ultraechoPin = 6; // inputpin for ultrasonic echo pin
long duration; // the duration of sound wave travel
int distance; // the distance measurement


void setup(){
  pinMode(alarmPin, OUTPUT); // defining that the variable storing the pin is to be an output
  pinMode(pushbuttonPin, INPUT); // defining that the variable storing the pin is to be an input
  pinMode(ultratrigPin, OUTPUT);
  pinMode(ultraechoPin, INPUT); // defining that the variable storing the pin is to be an input
  pinMode(pirPin, INPUT); // defining that the variable storing the pin is to be an input
  Serial.begin(9600); // opens a 9600 bit communication lane over the usb data line
}


void loop(){
  int pushbuttonState = digitalRead(pushbuttonPin);
  int pirState = digitalRead(pirPin);
  
       if (pushbuttonState == HIGH) {
       Serial.println("Button activated!");
       delay(150); // delay to improve simulation performance
       }     
  
       if (pirState == HIGH) {
       Serial.println("PIR activated!");
       delay(150); // delay to improve simulation performance
      } 
  
 	  int distanceThreshold = 150;
      // Clears the trigPin condition
      digitalWrite(ultratrigPin, LOW);
      delayMicroseconds(2);
      // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
      digitalWrite(ultratrigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(ultratrigPin, LOW);
      // Reads the echoPin, returns the sound wave travel time in microseconds
      duration = pulseIn(ultraechoPin, HIGH);
      // Calculating the distance
      distance = duration * 0.034 / 2; // Speed of sound wave divided by 2 (go and back)
      // Displays the distance on the Serial Monitor
      Serial.print("Distance: ");
  	  delay(200);
      Serial.print(distance);
      delay(200);
      Serial.println(" cm");
  	  delay(200);
  
       /* if (distance < distanceThreshold) {
       Serial.println("Ultrasonic activated!");
       delay(150);
       }*/
} 


void triggerAlarm(){
}
