int alarmPin = 2; // outputpin for led
int buttonPin = 4; // inputpin for pushbutton
int pirPin = 5; // inputpin for pir sensor
int ultratrigPin = 3; // inputpin for ultrasonic trigger pin
int ultraechoPin = 6; // inputpin for ultrasonic echo pin
int buttonState = 0;
int pirState = 0;
long duration = 0;
int distance = 0; // global variables here is fine since it is a small program

void loop() {
  int dummy = 0;
}

void setup() {
  pinMode(alarmPin, OUTPUT); // defining that the variable storing the pin is to be an output
  pinMode(buttonPin, INPUT); // defining that the variable storing the pin is to be an input
  pinMode(ultratrigPin, OUTPUT);
  pinMode(ultraechoPin, INPUT); // defining that the variable storing the pin is to be an input
  pinMode(pirPin, INPUT); // defining that the variable storing the pin is to be an input
  Serial.begin(9600); // opens a 9600 bit communication lane over the usb data line
}

// all of the logic to activate the pushbutton
boolean buttonActivation() {
  buttonState = digitalRead(buttonPin);
  if (buttonState == HIGH) {
    Serial.println("Button activated!");
    return true;
    delay(150);
  } else {
    return false;
  }
}

// all of the logic to activate the pir sensor
boolean pirActivation() {
  pirState = digitalRead(pirPin);
  if (pirState == HIGH) {
    Serial.println("PIR activated!");
    return true;
    delay(150);
  } else {
    return false;
  }
}

boolean ultraActivation() {
  digitalWrite(ultratrigPin, LOW); // Clears the trigPin condition
  delayMicroseconds(2);
  digitalWrite(ultratrigPin, HIGH); // Sets the trigPin HIGH (ACTIVE) for 10 microseconds
  delayMicroseconds(10);
  digitalWrite(ultratrigPin, LOW);

  duration = pulseIn(ultraechoPin, HIGH); // Reads the echoPin, returns the sound wave travel time in microseconds
  distance = duration * 0.034 / 2; // Speed of sound wave divided by 2 (go and back)

  if (distance < 150) {
    Serial.println("Ultrasonic activated!");
    return true;
    delay(150);
  } else {
    return false;
  }
}

void alarmActivation() {
  if (buttonState && pirState == true) {
    Serial.print("Activated1");
    digitalWrite(alarmPin, HIGH);
  } else if (buttonState && distance == true) {
    digitalWrite(alarmPin, HIGH);
    Serial.print("Activated2");
  } else if (pirState && distance == true) {
    digitalWrite(alarmPin, HIGH);
    Serial.print("Activated3");

  } else {
    digitalWrite(alarmPin, LOW);
    Serial.println("Deactivated");
  }
}
